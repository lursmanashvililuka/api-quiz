{"ast":null,"code":"import _defineProperty from\"/home/luka/Desktop/api-quiz/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/home/luka/Desktop/api-quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/luka/Desktop/api-quiz/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/luka/Desktop/api-quiz/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/luka/Desktop/api-quiz/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import'./SelectQuizType.css';import Tasks from'../Tasks/Tasks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectQuizType=/*#__PURE__*/function(_React$Component){_inherits(SelectQuizType,_React$Component);var _super=_createSuper(SelectQuizType);function SelectQuizType(props){var _this;_classCallCheck(this,SelectQuizType);_this=_super.call(this,props);_this.handleChange=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};_this.getQuiz=function(){fetch(\"https://opentdb.com/api.php?amount=10&category=\".concat(_this.state.trivia_category,\"&difficulty=\").concat(_this.state.trivia_difficulty)).then(function(response){return response.json();}).then(function(data){_this.setState({QAarray:data.results,isTaskDisplayed:!_this.state.isTaskDisplayed,trivia_category:'',trivia_difficulty:''});});};_this.state={trivia_category:'',trivia_difficulty:'',QAarray:[],isTaskDisplayed:false};return _this;}// save data of inputs in this.state\n_createClass(SelectQuizType,[{key:\"render\",value:function render(){var _this$state=this.state,QAarray=_this$state.QAarray,trivia_difficulty=_this$state.trivia_difficulty,trivia_category=_this$state.trivia_category,isTaskDisplayed=_this$state.isTaskDisplayed;return isTaskDisplayed?/*#__PURE__*/_jsx(Tasks,{QAarray:QAarray,getQuiz:this.getQuiz}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"tc\",children:\"select category and difficulty here\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"you should start with easy ones\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"allButtons tc\",children:// check both fields if they are not empty, display dificulty and then category, when they are entered display start button\ntrivia_difficulty!=''&&trivia_category!=''?/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:this.getQuiz,children:\"Start\"}):trivia_difficulty!=''?/*#__PURE__*/_jsxs(\"select\",{value:trivia_category,name:\"trivia_category\",className:\"button\",onChange:this.handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"any\",children:\"Select Category\"}),this.props.categories[0].map(function(genre,index){return/*#__PURE__*/_jsx(\"option\",{value:genre.id,children:genre.name},index);})]}):/*#__PURE__*/_jsxs(\"select\",{value:this.state.trivia_difficulty,name:\"trivia_difficulty\",className:\"button\",onChange:this.handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"any\",children:\"Select difficulty\"}),/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Med\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard\"})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"tc ma2\",children:\"Until you startremember 1 correct answer = 20 points\"})]});}}]);return SelectQuizType;}(React.Component);export default SelectQuizType;","map":{"version":3,"names":["React","Tasks","SelectQuizType","props","handleChange","event","target","name","value","setState","getQuiz","fetch","state","trivia_category","trivia_difficulty","then","response","json","data","QAarray","results","isTaskDisplayed","categories","map","genre","index","id","Component"],"sources":["/home/luka/Desktop/api-quiz/src/components/SelectQuizType/SelectQuizType.js"],"sourcesContent":["import React from 'react'\nimport './SelectQuizType.css'\nimport Tasks from '../Tasks/Tasks'\n\nclass SelectQuizType extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttrivia_category: '',\n\t\t\ttrivia_difficulty: '',\n\t\t\tQAarray: [],\n\t\t\tisTaskDisplayed: false\n\t\t}\n\t}\n\n\t// save data of inputs in this.state\n\thandleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    // fetch quiz By user-entered criteria, then change isTaskDisplayed to true and clean up input values in state\n    getQuiz = () => {\n    \tfetch(`https://opentdb.com/api.php?amount=10&category=${this.state.trivia_category}&difficulty=${this.state.trivia_difficulty}`)\n    \t.then(response => response.json())\n    \t.then(data => {\n    \t\tthis.setState({\n    \t\t\tQAarray: data.results,\n            \tisTaskDisplayed: !this.state.isTaskDisplayed,\n            \ttrivia_category: '',\n            \ttrivia_difficulty: ''\n        \t})\n    \t})\n    \t\n    }\n\t\n\trender() {\n\t\tconst { QAarray, trivia_difficulty, trivia_category, isTaskDisplayed } = this.state\n\t\treturn(\n\t\t\tisTaskDisplayed \n\t\t\t? \n\t\t\t<Tasks QAarray={QAarray} getQuiz={this.getQuiz} /> \n\t\t\t:\n\t\t\t<div>\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='tc'>select category and difficulty here</h1>\n\t\t\t\t\t<h3>you should start with easy ones</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className='allButtons tc'>\n\t\t\t\t\t{\t// check both fields if they are not empty, display dificulty and then category, when they are entered display start button\n\t\t\t\t\t\ttrivia_difficulty != '' && trivia_category != '' \n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<button className=\"button\" onClick={this.getQuiz}>Start</button>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\ttrivia_difficulty != ''\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<select value={trivia_category} name=\"trivia_category\" className=\"button\" onChange={this.handleChange}>\n\t\t\t\t\t\t\t\t<option value=\"any\">Select Category</option>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.categories[0].map((genre, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={genre.id}>{genre.name}</option>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<select value={this.state.trivia_difficulty} name=\"trivia_difficulty\" className=\"button\" onChange={this.handleChange}>\n\t\t\t\t\t\t\t\t<option value=\"any\">Select difficulty</option>\n\t\t\t\t\t\t\t\t<option value=\"easy\">Easy</option>\n\t\t\t\t\t\t\t\t<option value=\"medium\">Med</option>\n\t\t\t\t\t\t\t\t<option value=\"hard\">Hard</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<p className='tc ma2'>Until you startremember 1 correct answer = 20 points</p>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\n\nexport default SelectQuizType"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}