{"ast":null,"code":"var _jsxFileName = \"/home/luka/Desktop/quiz/src/components/SelectQuizType/SelectQuizType.js\";\nimport React from 'react';\nimport './SelectQuizType.css';\nimport Tasks from '../Tasks/Tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SelectQuizType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.getQuiz = () => {\n      fetch(`https://opentdb.com/api.php?amount=10&category=${this.state.trivia_category}&difficulty=${this.state.trivia_difficulty}`).then(response => response.json()).then(data => {\n        this.setState({\n          QAarray: data.results,\n          isTaskDisplayed: !this.state.isTaskDisplayed,\n          trivia_category: '',\n          trivia_difficulty: ''\n        });\n      });\n    };\n    this.state = {\n      trivia_category: '',\n      trivia_difficulty: '',\n      QAarray: [],\n      isTaskDisplayed: false\n    };\n  }\n\n  // save data of inputs in this.state\n\n  render() {\n    const {\n      QAarray,\n      trivia_difficulty,\n      trivia_category,\n      isTaskDisplayed\n    } = this.state;\n    return isTaskDisplayed ? /*#__PURE__*/_jsxDEV(Tasks, {\n      QAarray: QAarray,\n      getQuiz: this.getQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"tc\",\n          children: \"select category and difficulty here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"you should start with easy ones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allButtons tc\",\n        children:\n        // check both fields if they are not empty, display dificulty and then category, when they are entered display start button\n        trivia_difficulty != '' && trivia_category != '' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.getQuiz,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }, this) : trivia_difficulty != '' ? /*#__PURE__*/_jsxDEV(\"select\", {\n          value: trivia_category,\n          name: \"trivia_category\",\n          className: \"button\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"any\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), this.props.categories[0].map((genre, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: genre.id,\n              children: genre.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 12\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.trivia_difficulty,\n          name: \"trivia_difficulty\",\n          className: \"button\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tc ma2\",\n        children: \"here is our rules If your answer turns out to be correct you will get 5 points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default SelectQuizType;","map":{"version":3,"names":["React","Tasks","SelectQuizType","Component","constructor","props","handleChange","event","name","value","target","setState","getQuiz","fetch","state","trivia_category","trivia_difficulty","then","response","json","data","QAarray","results","isTaskDisplayed","render","categories","map","genre","index","id"],"sources":["/home/luka/Desktop/quiz/src/components/SelectQuizType/SelectQuizType.js"],"sourcesContent":["import React from 'react'\nimport './SelectQuizType.css'\nimport Tasks from '../Tasks/Tasks'\n\nclass SelectQuizType extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttrivia_category: '',\n\t\t\ttrivia_difficulty: '',\n\t\t\tQAarray: [],\n\t\t\tisTaskDisplayed: false\n\t\t}\n\t}\n\n\t// save data of inputs in this.state\n\thandleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    // fetch quiz By user-entered criteria, then change isTaskDisplayed to true and clean up input values in state\n    getQuiz = () => {\n    \tfetch(`https://opentdb.com/api.php?amount=10&category=${this.state.trivia_category}&difficulty=${this.state.trivia_difficulty}`)\n    \t.then(response => response.json())\n    \t.then(data => {\n    \t\tthis.setState({\n    \t\t\tQAarray: data.results,\n            \tisTaskDisplayed: !this.state.isTaskDisplayed,\n            \ttrivia_category: '',\n            \ttrivia_difficulty: ''\n        \t})\n    \t})\n    \t\n    }\n\t\n\trender() {\n\t\tconst { QAarray, trivia_difficulty, trivia_category, isTaskDisplayed } = this.state\n\t\treturn(\n\t\t\tisTaskDisplayed \n\t\t\t? \n\t\t\t<Tasks QAarray={QAarray} getQuiz={this.getQuiz} /> \n\t\t\t:\n\t\t\t<div>\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='tc'>select category and difficulty here</h1>\n\t\t\t\t\t<h3>you should start with easy ones</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className='allButtons tc'>\n\t\t\t\t\t{\t// check both fields if they are not empty, display dificulty and then category, when they are entered display start button\n\t\t\t\t\t\ttrivia_difficulty != '' && trivia_category != '' \n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<button className=\"button\" onClick={this.getQuiz}>Start</button>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\ttrivia_difficulty != ''\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<select value={trivia_category} name=\"trivia_category\" className=\"button\" onChange={this.handleChange}>\n\t\t\t\t\t\t\t\t<option value=\"any\">Select Category</option>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.categories[0].map((genre, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={genre.id}>{genre.name}</option>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<select value={this.state.trivia_difficulty} name=\"trivia_difficulty\" className=\"button\" onChange={this.handleChange}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<option value=\"easy\">Easy</option>\n\t\t\t\t\t\t\t\t<option value=\"medium\">Medium</option>\n\t\t\t\t\t\t\t\t<option value=\"hard\">Hard</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<p className='tc ma2'>here is our rules If your answer turns out to be correct you will get 5 points</p>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\n\nexport default SelectQuizType"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}